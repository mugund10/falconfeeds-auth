definitions:
  types.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  types.LoginResponse:
    properties:
      token:
        type: string
    type: object
  types.SignupRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  types.User:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
info:
  contact: {}
paths:
  /health:
    get:
      description: Returns OK if the service is running
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Health Check
      tags:
      - Health
  /login:
    post:
      consumes:
      - application/json
      description: Login a user and get JWT token
      parameters:
      - description: Login Request
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/types.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.LoginResponse'
        "400":
          description: invalid json or validation error
          schema:
            type: string
        "401":
          description: invalid email or password
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      summary: Login
      tags:
      - Auth
  /signup:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: Signup Request
        in: body
        name: signup
        required: true
        schema:
          $ref: '#/definitions/types.SignupRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/types.User'
        "400":
          description: invalid json or validation error
          schema:
            type: string
        "409":
          description: user already exists
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      summary: Signup
      tags:
      - Auth
  /test:
    get:
      description: Protected route to verify JWT token
      parameters:
      - description: Bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: missing or invalid token
          schema:
            type: string
      summary: Test Endpoint
      tags:
      - Test
swagger: "2.0"
